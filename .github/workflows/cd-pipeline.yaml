name: CD - Deploy to EKS with Kubectl

on:
  workflow_run:
    workflows: ["CI - Build and Push Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      EKS_CLUSTER: otel-demo-cluster

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESSKEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRETKEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION

    - name: üîç Check cluster connection
      run: kubectl get nodes

    - name: üèó Create otel-demo namespace
      run: kubectl create namespace otel-demo --dry-run=client -o yaml | kubectl apply -f -

    - name: üì¶ Clone and apply OpenTelemetry manifests
      run: |
        git clone https://github.com/nkafridi1/opentelemetry-demo-FinalProject.git
        cd opentelemetry-demo-FinalProject
        kubectl apply -n otel-demo -f ./kubernetes/opentelemetry-demo.yaml

    - name: Monitor deployment rollouts and rollback on failure
      run: |
        echo "üîç Checking deployment rollouts in namespace 'otel-demo'..."
        deployments=$(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}")
        failed=0

        for deploy in $deployments; do
          echo "‚è≥ Waiting for rollout of '$deploy'..."
          if ! kubectl rollout status deployment/$deploy -n otel-demo --timeout=120s; then
            echo "‚ùå Rollout failed for '$deploy'"
            failed=1
            break
          fi
          echo "‚úÖ '$deploy' rolled out successfully"
        done

        if [ "$failed" -eq 1 ]; then
          echo "üö® Detected failed rollout. Starting rollback (if applicable)..."
          for deploy in $deployments; do
            echo "üîé Checking revision history for '$deploy'..."
            if kubectl rollout history deployment/$deploy -n otel-demo | grep -q "REVISION"; then
              echo "üîÅ Rolling back '$deploy'..."
              if kubectl rollout undo deployment/$deploy -n otel-demo; then
                echo "‚úÖ Rolled back '$deploy' successfully"
              else
                echo "‚ö† Failed to rollback '$deploy'"
              fi
            else
              echo "‚ö† No previous revision for '$deploy' ‚Äî skipping rollback"
            fi
          done
          echo "‚ö† Rollback process completed. Review logs for any manual intervention."
          exit 1
        else
          echo "‚úÖ All deployments rolled out successfully"
        fi